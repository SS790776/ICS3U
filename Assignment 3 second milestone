"""
Sean S
11/20/2024
ICS3U 
U5 L2
    Variable dictionary
    t = turtle.turtle()
    file = "rocky_bullwinkle_mod.xpm"
    array, holds array
"""

import turtle

def uprightgraph(xdim,ydim,space,size):
    counter = 0
    t.goto(int(xdim)*-space/2,int(ydim)*space/2)
    position = t.pos()
    for i in image:
        counter += space
        t.goto(position[0],position[1]-counter)
        for x in i:
            pointc = colour[x]
            t.dot(size,pointc)
            t.forward(space)

def upsidedowngraph(xdim,ydim,space,size):
    counter = 0 
    t.goto(int(xdim)*space/2,int(ydim)*-space/2)
    position = t.pos()
    for i in image:
        counter += space
        t.goto(position[0],position[1]+counter)
        for x in i:
            pointc = colour[x]
            t.dot(size,pointc)
            t.backward(space)
t = turtle.Turtle()

file = "rocky_bullwinkle_mod.xpm"
firstinf = []
try:
    fh = open(file, "r") #open file
    firstinf = fh.readline()
    xdim, ydim, colournum = firstinf.split(" ")

    colour = {
        
        }
    
    for x in range(int(colournum)):
        line = fh.readline()
        line.strip()
        symb, c, rainbow = line.split()
        
        if symb == "~":
            symb = " "
            colour.update({symb:rainbow})

        else:
            colour.update({symb:rainbow})
    
    
    
    image = []

    for i in range(int(ydim)):
        line = fh.readline()
        line = line.replace('\n', '')
        image.append(line)




    fh.close()
except OSError as err:
    print("OSError: ", err)
except EOFError as err2:
    print("EOFError: ", err2)

t.penup()
t.hideturtle()
turtle.tracer(0,0)

counter = 0
space = 2
size = 4

degrees = 0



if degrees == 0:
    uprightgraph(xdim,ydim,space,size)

elif degrees == 180:
    upsidedowngraph(xdim,ydim,space,size)
    
turtle.update()
print("done!")
