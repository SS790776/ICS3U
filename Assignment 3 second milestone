"""
Sean S
11/20/2024
ICS3U 
U5 L2
    Variable dictionary
    t = turtle.turtle()
    file = "rocky_bullwinkle_mod.xpm"
    array, holds array
"""

import turtle

def uprightgraph(xdim,ydim,space,size):
    print("ploting...")
    counter = 0
    t.goto(int(xdim)*-space/2,int(ydim)*space/2)
    position = t.pos()
    for i in image:
        counter += space
        t.goto(position[0],position[1]-counter)
        for x in i:
            pointc = colour[x]
            t.dot(size,pointc)
            t.forward(space)

def upsidedowngraph(xdim,ydim,space,size):
    print("plotting...")
    counter = 0 
    t.goto(int(xdim)*space/2,int(ydim)*-space/2)
    position = t.pos()
    for i in image:
        counter += space
        t.goto(position[0],position[1]+counter)
        for x in i:
            pointc = colour[x]
            t.dot(size,pointc)
            t.backward(space)
def ninetygraph(xdim,ydim,space,size):
    print("ploting...")
    counter = 0
    t.goto(int(xdim)*-space/2,int(ydim)*-space/2)
    position = t.pos()
    t.left(90)
    for i in image:
        counter += space
        t.goto(position[0]+counter,position[1])
        for x in i:
            pointc = colour[x]
            t.dot(size,pointc)
            t.forward(space)
def twoseventygraph(xdim,ydim,space,size):
    print("ploting...")
    counter = 0
    t.goto(int(xdim)*-space/2,int(ydim)*-space/2)
    position = t.pos()
    t.left(90)
    for i in image:
        counter += space
        t.goto(position[0]+counter,position[1])
        for x in i:
            pointc = colour[x]
            t.dot(size,pointc)
            t.forward(space)
def rotate(xdim,ydim,space,size,rotation):
    turtle.clear()
    t.penup()
    t.hideturtle()
    turtle.tracer(0,0)
    print(rotation)
    if rotation == 0:
        ninetygraph(xdim,ydim,space,size)
    elif rotation == 90:
        print("yes")
        upsidedowngraph(xdim,ydim,space,size)
    elif rotation == 180:
        twoseventygraph(xdim,ydim,space,size)
    elif rotation == 270:
        uprightgraph(xdim,ydim,space,size)
    turtle.update()



t = turtle.Turtle()

file = "smiley_emoji_mod.xpm"
firstinf = []
try:
    fh = open(file, "r") #open file
    firstinf = fh.readline()
    xdim, ydim, colournum = firstinf.split(" ")

    colour = {
        
        }
    
    for x in range(int(colournum)):
        line = fh.readline()
        line.strip()
        symb, c, rainbow = line.split()
        
        if symb == "~":
            symb = " "
            colour.update({symb:rainbow})

        else:
            colour.update({symb:rainbow})
    
    
    
    image = []

    for i in range(int(ydim)):
        line = fh.readline()
        line = line.replace('\n', '')
        image.append(line)




    fh.close()
except OSError as err:
    print("OSError: ", err)
except EOFError as err2:
    print("EOFError: ", err2)

t.penup()
t.hideturtle()
turtle.tracer(0,0)

counter = 0
space = 2
size = 4

print("""Please enter the desired spacing and size of the dots.
*Recommended amount is space = 2 and size = 4""")
space = int(input("Space: "))
size = int(input("Size: "))

p = 1
while p == 1:
    try:
        rotation = int(input("Please enter the desired rotation (0, 90, 180, 270): "))
        p = 0
    except ValueError:
        print("You did not give an integer, please try again \n")
        p = 1
    if rotation == 0:
        uprightgraph(xdim,ydim,space,size)

    elif rotation == 180:
        upsidedowngraph(xdim,ydim,space,size)

    elif rotation == 90:
        ninetygraph(xdim,ydim,space,size)

    elif rotation == 270:
        twoseventygraph(xdim,ydim,space,size)

    else:
        print("You did not give a valid rotation number, please try again")
        p = 1
    
turtle.update()
print("Done! Please check to see if the Turtle graphics window has opened.")

stop = 1
while stop == 1:
    yn = input("Flip? Y/N: ")
    if yn == "y" or yn == "Y":
        rotate(xdim,ydim,space,size,rotation)
        
        rotation += 90
        
        print("Done! Please check to see if the Turtle graphics window has opened.")
        
        stop = 1
    elif yn == "n" or yn == "N":
        stop = 0
        print("Thanks for using this program!")
    else:
        print("not a valid response")
